@use 'sass:map';
@use './functions' as pf;

// Colors

/* Brand Colors */
$brand-primary: #E8871E;
$brand-secondary: #008148;

/* Brand Status Colors */
$brand-success: #28a745;
$brand-danger: #dc3545;
$brand-warning: #ffc107;
$brand-info: #17a2b8;

$brand-black: #353535;
$brand-white: #FFF8E8;
$brand-neutral-50: #fefefe;
$brand-neutral-100: #f8f9fa;
$brand-neutral-200: #e9ecef;
$brand-neutral-300: #dee2e6;
$brand-neutral-400: #ced4da;
$brand-neutral-500: #adb5bd;
$brand-neutral-600: #6c757d;
$brand-neutral-700: #495057;
$brand-neutral-800: #343a40;
$brand-neutral-900: #212529;

$brand-colors: (
  'primary': $brand-primary,
  'secondary': $brand-secondary,
  'success': $brand-success,
  'danger': $brand-danger,
  'warning': $brand-warning,
  'info': $brand-info,
);

$colors: pf.generate-color-system($brand-colors, 'scale');
$colors: map.merge($colors, (
  'neutral': (
    50: $brand-white,
    100: $brand-neutral-50,
    200: $brand-neutral-200,
    300: $brand-neutral-300,
    400: $brand-neutral-400,
    500: $brand-neutral-500,
    600: $brand-neutral-600,
    700: $brand-neutral-700,
    800: $brand-neutral-800,
    900: $brand-neutral-900,
  ),
));

// ===================================
// Color Access Function
// ===================================
@function color($name, $weight: 500) {
  @return pf.get-color($colors, $name, $weight);
}

@mixin generate-color-properties() {
  @each $color-name, $palette in $colors {
    @each $weight, $color-value in $palette {
      --color-#{$color-name}-#{$weight}: #{$color-value};
    }
  }
  
  // Generate semantic aliases
  --color-background: #{color('neutral', 50)};
  --color-surface: #{color('neutral', 100)};
  --color-border: #{color('neutral', 200)};
  --color-text: #{color('neutral', 900)};
  --color-text-muted: #{color('neutral', 600)};
  --color-text-subtle: #{color('neutral', 500)};
}

// ===================================
// Color Harmony Palettes (Optional)
// ===================================

// Generate complementary palette for primary color
// $primary-complement: pf.generate-complementary($brand-primary);

// Generate triadic palettes
// $primary-triadic: pf.generate-triadic($brand-primary);

// Typography
$font-family-base: system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
$font-family-mono: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;

$font-size-base: 1rem;
$line-height-base: 1.6;

$font-sizes: (
  'xs': 0.75rem,
  'sm': 0.875rem,
  'base': 1rem,
  'lg': 1.125rem,
  'xl': 1.25rem,
  '2xl': 1.5rem,
  '3xl': 1.875rem,
  '4xl': 2.25rem,
  '5xl': 3rem
);

$font-weights: (
  'normal': 400,
  'medium': 500,
  'semibold': 600,
  'bold': 700
);

// Spacing
$spacer: 1rem;
$spacers: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer * 0.75,
  4: $spacer,
  5: $spacer * 1.25,
  6: $spacer * 1.5,
  8: $spacer * 2,
  10: $spacer * 2.5,
  12: $spacer * 3,
  16: $spacer * 4,
  20: $spacer * 5,
  24: $spacer * 6
);

// Layout
$container-max-widths: (
  'small': 640px,
  'medium': 768px,
  'large': 1024px,
  'xl': 1280px,
  'full': 100%
);

$grid-columns: 12;
$grid-gutter: 1.5rem;

// Transitions
$transition-base: all 0.2s ease-in-out;
$transition-fast: all 0.15s ease-in-out;
$transition-slow: all 0.35s ease-in-out;

// Shadows
$shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
$shadow-base: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
$shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
$shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
$shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);

// Border radius
$border-radius-sm: 0.25rem;
$border-radius-base: 0.375rem;
$border-radius-lg: 0.5rem;
$border-radius-full: 9999px;

// Z-index
$z-index-navbar: 100;
$z-index-dropdown: 1000;
$z-index-sticky: 1020;
$z-index-fixed: 1030;
$z-index-modal-backdrop: 1040;
$z-index-modal: 1050;
$z-index-popover: 1060;
$z-index-tooltip: 1070;