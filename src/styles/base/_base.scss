@use 'sass:map';
@use 'sass:color';

@use '../abstracts' as *;

// ===================================
// Base Element Styles
// ===================================

:root {
  @include generate-color-properties();
  // ===================================
  // Brand Colors
  // ===================================
  --color-primary: #{color('primary', 500)};
  --color-secondary: #{color('secondary', 500)};
  
  // ===================================
  // Status Colors
  // ===================================
  --color-success: #{color('success', 500)};
  --color-danger: #{color('danger', 500)};
  --color-warning: #{color('warning', 500)};
  --color-info: #{color('info', 500)};
  
  // ===================================
  // Neutral Colors
  // ===================================
  --color-black: #{$brand-black};
  --color-white: #{$brand-white};
  
  --color-neutral-50: #{color('neutral', 50)};
  --color-neutral-100: #{color('neutral', 100)};
  --color-neutral-200: #{color('neutral', 200)};
  --color-neutral-300: #{color('neutral', 300)};
  --color-neutral-400: #{color('neutral', 400)};
  --color-neutral-500: #{color('neutral', 500)};
  --color-neutral-600: #{color('neutral', 600)};
  --color-neutral-700: #{color('neutral', 700)};
  --color-neutral-800: #{color('neutral', 800)};
  --color-neutral-900: #{color('neutral', 900)};
  
  // ===================================
  // Typography Scale
  // ===================================
  --font-size-xs: #{map.get($font-sizes, 'xs')};
  --font-size-sm: #{map.get($font-sizes, 'sm')};
  --font-size-base: #{map.get($font-sizes, 'base')};
  --font-size-lg: #{map.get($font-sizes, 'lg')};
  --font-size-xl: #{map.get($font-sizes, 'xl')};
  --font-size-2xl: #{map.get($font-sizes, '2xl')};
  --font-size-3xl: #{map.get($font-sizes, '3xl')};
  --font-size-4xl: #{map.get($font-sizes, '4xl')};
  --font-size-5xl: #{map.get($font-sizes, '5xl')};
  
  // Typography base values
  --font-size-root: #{$font-size-base};
  --line-height-base: #{$line-height-base};
  
  // ===================================
  // Font Weights
  // ===================================
  --font-weight-normal: #{map.get($font-weights, 'normal')};
  --font-weight-medium: #{map.get($font-weights, 'medium')};
  --font-weight-semibold: #{map.get($font-weights, 'semibold')};
  --font-weight-bold: #{map.get($font-weights, 'bold')};
  
  // ===================================
  // Spacing Scale (Key Values)
  // ===================================
  --space-0: #{map.get($spacers, 0)};
  --space-1: #{map.get($spacers, 1)};
  --space-2: #{map.get($spacers, 2)};
  --space-3: #{map.get($spacers, 3)};
  --space-4: #{map.get($spacers, 4)};
  --space-5: #{map.get($spacers, 5)};
  --space-6: #{map.get($spacers, 6)};
  --space-8: #{map.get($spacers, 8)};
  --space-10: #{map.get($spacers, 10)};
  --space-12: #{map.get($spacers, 12)};
  --space-16: #{map.get($spacers, 16)};
  --space-20: #{map.get($spacers, 20)};
  --space-24: #{map.get($spacers, 24)};
  
  // Base spacer for calculations
  --spacer: #{$spacer};
  
  // ===================================
  // Border Radius
  // ===================================
  --border-radius-sm: #{$border-radius-sm};
  --border-radius-base: #{$border-radius-base};
  --border-radius-lg: #{$border-radius-lg};
  --border-radius-full: #{$border-radius-full};
  
  // ===================================
  // Transitions
  // ===================================
  --transition-base: #{$transition-base};
  --transition-fast: #{$transition-fast};
  --transition-slow: #{$transition-slow};
  
  // ===================================
  // Shadows
  // ===================================
  --shadow-sm: #{$shadow-sm};
  --shadow-base: #{$shadow-base};
  --shadow-md: #{$shadow-md};
  --shadow-lg: #{$shadow-lg};
  --shadow-xl: #{$shadow-xl};
  
  // ===================================
  // Layout Values
  // ===================================
  --grid-gutter: #{$grid-gutter};
  --grid-columns: #{$grid-columns};
  
  // Container max-widths
  --container-sm: #{map.get($container-max-widths, 'small')};
  --container-md: #{map.get($container-max-widths, 'medium')};
  --container-lg: #{map.get($container-max-widths, 'large')};
  --container-xl: #{map.get($container-max-widths, 'xl')};
}

// ===================================
// Dark Mode Override
// ===================================
/*[data-theme="dark"] {
  --color-neutral-500: #{color('neutral', 400)};
  --color-neutral-600: #{color('neutral', 300)};
  --color-neutral-700: #{color('neutral', 200)};
  --color-neutral-800: #{color('neutral', 100)};
  --color-neutral-900: #{color('neutral', 50)};
}*/

/*@media (prefers-color-scheme: dark) {
  :root {
    --color-neutral-500: #{color('neutral', 400)};
    --color-neutral-600: #{color('neutral', 300)};
    --color-neutral-700: #{color('neutral', 200)};
    --color-neutral-800: #{color('neutral', 100)};
    --color-neutral-900: #{color('neutral', 50)};
  }
}*/

// Box sizing
*,
*::before,
*::after {
  box-sizing: border-box;
}

// Root
html {
  font-size: 16px;
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Body
body {
  margin: 0;
  padding: 0;
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: var(--color-neutral-700);
  background-color: var(--color-neutral-50);
  overflow-x: hidden;
}

// Main content wrapper
main {
  position: relative;
  z-index: 1;
}

// Images
img {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  border-style: none;
}

// Links
a {
  color: var(--color-primary);
  text-decoration: none;
  transition: $transition-base;
  
  &:hover {
    color: color.adjust(color('primary', 500), $lightness: -10%);
  }
}

// Lists
ul,
ol {
  margin: 0;
  padding: 0;
}

// Blockquote
blockquote {
  margin: 0 0 1rem;
  padding: 1rem 1.5rem;
  border-left: 4px solid var(--color-primary);
  background-color: color.adjust(color('neutral', 200), $lightness: 3%);
  font-style: italic;
}

// Code
code {
  padding: 0.2rem 0.4rem;
  font-size: 0.875em;
  color: var(--color-secondary);
  background-color: var(--color-neutral-200);
  border-radius: $border-radius-sm;
}

pre {
  margin: 0 0 1rem;
  padding: 1rem;
  background-color: var(--color-neutral-200);
  border-radius: $border-radius-sm;
  overflow-x: auto;
  
  code {
    padding: 0;
    background-color: transparent;
    color: inherit;
  }
}

// Tables
table {
  border-collapse: collapse;
  width: 100%;
  margin-bottom: 1rem;
}

th,
td {
  padding: 0.75rem;
  text-align: left;
  border-bottom: 1px solid #dee2e6;
}

th {
  font-weight: map.get($font-weights, 'semibold');
  border-bottom-width: 2px;
}

// Horizontal rule
hr {
  margin: 2rem 0;
  border: 0;
  border-top: 1px solid rgba(color('neutral', 500), 0.1);
}

// Selection
::selection {
  background-color: rgba(color('primary', 500), 0.2);
  color: var(--color-neutral-500);
}

::-moz-selection {
  background-color: rgba(color('primary', 500), 0.2);
  color: var(--color-neutral-500);
}

// Focus visible
:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

// Scrollbar styles (Webkit)
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  background: var(--color-neutral-200);
}

::-webkit-scrollbar-thumb {
  background: color.adjust(color('neutral', 500), $lightness: 40%);
  border-radius: 5px;
  
  &:hover {
    background: color.adjust(color('neutral', 500), $lightness: 30%);
  }
}

// Firefox scrollbar
* {
  scrollbar-width: thin;
  scrollbar-color: color.adjust(color('neutral', 500), $lightness: 40%) var(--color-neutral-200);
}