---
import { navigation } from "../../data/site/navigation";
const currentPath = Astro.url.pathname;
---

<nav class="nav" aria-label="Primary navigation">
  <button class="nav__toggle" aria-expanded="false" aria-controls="nav-menu">
    <span class="nav__toggle-icon"></span>
    <span class="sr-only">Toggle navigation</span>
  </button>

  <ul class="nav__menu" id="nav-menu">
    {
      Object.values(navigation).map((item) =>
        item.global ? (
          item.children ? (
            <li class="nav__item">
              <a
                href={item.url}
                class="nav__link"
                aria-current={currentPath === item.url ? "page" : undefined}
                aria-expanded="false"
                aria-haspopup="true"
              >
                {item.label}
                <span class="nav__dropdown-arrow">â–¼</span>
              </a>
              <ul class="nav__dropdown">
                {Object.values(item.children).map((subItem) => (
                  <li class="nav__dropdown-item">
                    <a
                      href={subItem.url}
                      class="nav__dropdown-link"
                      aria-current={
                        currentPath === subItem.url ? "page" : undefined
                      }
                    >
                      {subItem.label}
                    </a>
                  </li>
                ))}
              </ul>
            </li>
          ) : (
            <li class="nav__item">
              <a
                href={item.url}
                class="nav__link"
                aria-current={currentPath === item.url ? "page" : undefined}
              >
                {item.label}
              </a>
            </li>
          )
        ) : null,
      )
    }
  </ul>
</nav>

<style lang="scss">
  @use "sass:map";
  @use "../../styles/abstracts" as *;

  $nav-links-min-width: map.get($spacers, 20);

  .nav {
    &__toggle {
      background: none;
      border: none;
      padding: 0;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 2.5rem;
      height: 2.5rem;

      @include media-up("lg") {
        display: none;
      }

      &-icon {
        position: relative;
        width: 1.5rem;
        height: 2px;
        background-color: var(--color-black);
        transition: $transition-fast;

        &::before,
        &::after {
          content: "";
          position: absolute;
          left: 0;
          width: 100%;
          height: 2px;
          background-color: var(--color-black);
          transition: $transition-fast;
        }

        &::before {
          top: -6px;
        }

        &::after {
          bottom: -6px;
        }
      }

      &[aria-expanded="true"] &-icon {
        background-color: transparent;

        &::before {
          top: 0;
          transform: rotate(45deg);
        }

        &::after {
          bottom: 0;
          transform: rotate(-45deg);
        }
      }
    }

    &__menu {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;

      @include media-down("lg") {
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        background-color: inherit;
        flex-direction: column;
        padding: 0;
        padding-bottom: map.get($spacers, 10);
        box-shadow: $shadow-lg;
        z-index: $z-index-navbar;
        overflow-y: scroll;
        overscroll-behavior: contain;
      }

      &.is-open {
        display: flex;
      }
    }

    &__item {
      position: relative;
      margin: 0 map.get($spacers, 2);

      @include media-down("lg") {
        margin: 0;
      }
    }

    &__link {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: map.get($spacers, 3) map.get($spacers, 2);
      text-decoration: none;
      color: var(--color-white);
      font-weight: map.get($font-weights, "medium");
      font-size: map.get($font-sizes, "md");
      transition: $transition-base;
      position: relative;
      white-space: nowrap;
      min-width: $nav-links-min-width;

      &::after {
        content: "";
        position: absolute;
        bottom: -5px;
        left: 0;
        //transform: translateX(-50%);
        width: 0;
        height: 2px;
        background-color: var(--color-primary);
        transition: $transition-base;

        @include media-down("lg") {
          display: none;
        }
      }

      &[aria-current="page"] {
        color: var(--color-primary-700);
        font-weight: 500;
      }

      @include media-up("lg") {
        &:hover {
          color: var(--color-primary);

          &::after {
            width: 100%;
          }
        }
      }

      @include media-up("lg") {
        &[aria-current="page"] {
          color: var(--color-secondary);

          &::after {
            width: 100%;
          }
        }

        .nav__dropdown-arrow {
          display: none;
        }
      }

      @include media-down("lg") {
        padding: map.get($spacers, 4) map.get($spacers, 6);
        font-size: map.get($font-sizes, "lg");
      }
    }

    &__item:hover &__dropdown {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    &__dropdown {
      list-style: none;
      position: absolute;
      top: 100%;
      left: 0;
      margin-top: 15px;
      min-width: 200px;
      background: var(--color-white);
      box-shadow: $shadow-lg;
      padding: 0;
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: $transition-base;
      z-index: $z-index-navbar;

      @include media-down("lg") {
        position: static;
        opacity: 1;
        visibility: visible;
        transform: none;
        box-shadow: none;
        border-radius: 0;
        margin: 0;
        padding: 0;
      }

      &-item {
        margin: 0;
        border-bottom: 1px solid var(--color-neutral-200);

        &:last-child {
          border-bottom: none;
        }
      }

      &-link {
        display: block;
        padding: map.get($spacers, 4) map.get($spacers, 3);
        text-decoration: none;
        color: var(--color-primary);
        font-weight: map.get($font-weights, "medium");
        font-size: map.get($font-sizes, "md");
        transition: $transition-base;

        &:hover {
          background-color: var(--color-neutral-200);
        }

        &[aria-current="page"] {
          background-color: var(--color-primary);
          color: var(--color-neutral-50);
        }

        @include media-down("lg") {
          padding: map.get($spacers, 3) map.get($spacers, 16);
          font-size: map.get($font-sizes, "lg");
        }
      }
    }

    // Mobile menu styles
    @include media-down("lg") {
      &__toggle[aria-expanded="true"] ~ &__menu {
        display: flex;
      }
    }
  }
</style>

<script>
  const toggle = document.querySelector(".nav__toggle");
  const menu = document.querySelector(".nav__menu");

  toggle?.addEventListener("click", () => {
    const isExpanded = toggle.getAttribute("aria-expanded") === "true";
    toggle.setAttribute("aria-expanded", String(!isExpanded));
    menu?.classList.toggle("nav__menu--open");
  });
</script>
