---
const currentPath = Astro.url.pathname;

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/about', label: 'About' },
  { href: '/contact', label: 'Contact' }
];
---

<nav class="nav" aria-label="Primary navigation">
  <button class="nav__toggle" aria-expanded="false" aria-controls="nav-menu">
    <span class="nav__toggle-icon"></span>
    <span class="sr-only">Toggle navigation</span>
  </button>
  
  <ul class="nav__menu" id="nav-menu">
    {navItems.map(item => (
      <li class="nav__item">
        <a 
          href={item.href} 
          class="nav__link"
          aria-current={currentPath === item.href ? 'page' : undefined}
        >
          {item.label}
        </a>
      </li>
    ))}
  </ul>
</nav>

<style lang="scss">
    @use 'sass:map';
  @use '../../styles/abstracts' as *;

    .nav {
    &__toggle {
        @include reset-button;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 2.5rem;
        height: 2.5rem;
        
        @include media-up('lg') {
        display: none;
        }
        
        &-icon {
        position: relative;
        width: 1.5rem;
        height: 2px;
        background-color: currentColor;
        transition: $transition-fast;
        
        &::before,
        &::after {
            content: '';
            position: absolute;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: currentColor;
            transition: $transition-fast;
        }
        
        &::before {
            top: -6px;
        }
        
        &::after {
            bottom: -6px;
        }
        }
        
        &[aria-expanded="true"] &-icon {
        background-color: transparent;
        
        &::before {
            top: 0;
            transform: rotate(45deg);
        }
        
        &::after {
            bottom: 0;
            transform: rotate(-45deg);
        }
        }
    }
    
    &__menu {
        @include reset-list;
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background-color: $color-white;
        box-shadow: $shadow-md;
        
        @include media-up('lg') {
        display: flex;
        position: static;
        gap: map.get($spacers, 2);
        background-color: transparent;
        box-shadow: none;
        }
        
        &--open {
        display: block;
        }
    }
    
    &__item {
        @include media-down('lg') {
        border-bottom: 1px solid $color-gray-200;
        
        &:last-child {
            border-bottom: none;
        }
        }
    }
    
    &__link {
        display: block;
        padding: map.get($spacers, 3) map-get($spacers, 4);
        color: $color-gray-700;
        text-decoration: none;
        transition: $transition-fast;
        
        @include media-up('lg') {
        padding: map.get($spacers, 2) map-get($spacers, 3);
        border-radius: $border-radius-base;
        }
        
        &:hover {
        color: $color-primary;
        background-color: $color-gray-100;
        }
        
        &[aria-current="page"] {
        color: $color-primary;
        font-weight: 500;
        }
        
        &:focus-visible {
        @include focus-visible;
        }
    }
    
    @include dark-mode {
        .nav__menu {
        background-color: $color-gray-900;
        
        @include media-up('lg') {
            background-color: transparent;
        }
        }
        
        .nav__item {
        @include media-down('lg') {
            border-bottom-color: $color-gray-800;
        }
        }
        
        .nav__link {
        color: $color-gray-300;
        
        &:hover {
            color: $color-white;
            background-color: $color-gray-800;
        }
        
        &[aria-current="page"] {
            color: $color-white;
        }
        }
    }
    }
</style>

<script>
  const toggle = document.querySelector('.nav__toggle');
  const menu = document.querySelector('.nav__menu');
  
  toggle?.addEventListener('click', () => {
    const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
    toggle.setAttribute('aria-expanded', String(!isExpanded));
    menu?.classList.toggle('nav__menu--open');
  });
</script>