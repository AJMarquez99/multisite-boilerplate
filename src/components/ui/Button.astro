---
export interface Props {
  variant?: "primary" | "secondary";
  outline?: boolean;
  size?: "small" | "medium" | "large";
  href?: string;
  type?: "button" | "submit" | "reset";
  disabled?: boolean;
  classList?: string;
}

const {
  variant = "primary",
  outline = false,
  size = "medium",
  href,
  type = "button",
  disabled = false,
  classList = "",
  ...attrs
} = Astro.props;

const Tag = href ? "a" : "button";
const props = href ? { href } : { type, disabled };
---

<Tag
  class={`btn btn--${variant} ${outline ? "btn--outline" : ""} btn--${size} ${classList}`}
  {...props}
  {...attrs}
>
  <slot />
</Tag>

<style lang="scss" is:global>
  @use "sass:color";
  @use "../../styles/abstracts" as *;

  // Button Variants
  @mixin button-variant($color, $weight: null, $outline: false) {
    $variant: if($weight != null, "#{$color}-#{$weight}", $color);
    $text-color: if($weight != null and $weight < 500, "black", "white");

    @if $outline {
      color: var(--color-#{$variant});
      background-color: transparent;
      border-color: var(--color-#{$variant});

      &:hover:not(:disabled) {
        color: var(--color-#{$text-color});
        background-color: var(--color-#{$variant});
        border-color: var(--color-#{$variant});
      }
    } @else {
      background-color: var(--color-#{$variant});
      border-color: var(--color-#{$variant});
      color: var(--color-#{$text-color});

      &:hover:not(:disabled) {
        background-color: color.adjust(color($color, if($weight != null, $weight, 500)), $lightness: -10%);
        border-color: color.adjust(color($color, if($weight != null, $weight, 500)), $lightness: -10%);
        color: var(--color-#{$text-color});
      }
    }
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-4);
    border: 2px solid transparent;
    border-radius: var(--border-radius-base);
    font-weight: 500;
    text-decoration: none;
    white-space: nowrap;
    cursor: pointer;
    transition: var(--transition-fast);

    @include focus-visible;

    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    @each $color-name, $palette in $colors {
      &--#{$color-name} {
        @include button-variant($color-name);
      }

      &--#{$color-name}-outline {
        @include button-variant($color-name, $outline: true);
      }

      @each $weight, $color in $palette {
        &--#{$color-name}-#{$weight} {
          @include button-variant($color-name, $weight);
        }

        &--#{$color-name}-outline-#{$weight} {
          @include button-variant($color-name, $weight, $outline: true);
        }
      }
    }

    // Sizes
    &--small {
      padding: var(--space-1) var(--space-3);
      @include text-size("sm");
    }

    &--large {
      padding: var(--space-3) var(--space-6);
      @include text-size("lg");
    }
  }
</style>
